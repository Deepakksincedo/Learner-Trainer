# Generated by Django 3.0.14 on 2023-04-28 16:32

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lxpapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(max_length=50)),
                ('stdate', models.DateField()),
                ('enddate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ChapterQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(max_length=200)),
                ('option3', models.CharField(max_length=200)),
                ('option4', models.CharField(max_length=200)),
                ('answer', models.CharField(choices=[('1', 'Option1'), ('2', 'Option2'), ('3', 'Option3'), ('4', 'Option4')], max_length=200)),
                ('marks', models.IntegerField(default=0)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Chapter')),
            ],
        ),
        migrations.CreateModel(
            name='ChapterResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('wrong', models.PositiveIntegerField()),
                ('correct', models.PositiveIntegerField()),
                ('timetaken', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now=True)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Chapter')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=200)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Chapter')),
            ],
        ),
        migrations.CreateModel(
            name='CourseSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseset_name', models.CharField(max_length=200)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Chapter')),
            ],
        ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coursetype_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=50)),
                ('questiontpye', models.CharField(choices=[('MCQ', 'MCQ'), ('ShortAnswer', 'ShortAnswer')], default='', max_length=200)),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Batch')),
            ],
        ),
        migrations.CreateModel(
            name='KnownSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knownskill_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='LearnerDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_full_name', models.CharField(max_length=200)),
                ('mobile', models.IntegerField(default=0)),
                ('iswhatsapp', models.BooleanField(default=False)),
                ('whatsappno', models.IntegerField(default=0)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pic/user/')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MainHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mainhead_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='McqQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(max_length=200)),
                ('option3', models.CharField(max_length=200)),
                ('option4', models.CharField(max_length=200)),
                ('answer', models.CharField(choices=[('1', 'Option1'), ('2', 'Option2'), ('3', 'Option3'), ('4', 'Option4')], max_length=200)),
                ('marks', models.IntegerField(default=0)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Exam')),
            ],
        ),
        migrations.CreateModel(
            name='McqResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('wrong', models.PositiveIntegerField()),
                ('correct', models.PositiveIntegerField()),
                ('timetaken', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now=True)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Exam')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=200)),
                ('description', models.CharField(default='', max_length=1000)),
                ('whatlearn', models.CharField(default='', max_length=1000)),
                ('includes', models.CharField(default='', max_length=1000)),
                ('themecolor', models.CharField(choices=[('1', 'Red'), ('2', 'Green'), ('3', 'Blue'), ('4', 'Orange')], default='Green', max_length=200)),
                ('tags', models.CharField(default='', max_length=10000)),
                ('image', models.CharField(default='', max_length=1000)),
                ('banner', models.CharField(default='', max_length=1000)),
                ('price', models.IntegerField(default=0)),
                ('mainhead', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.MainHead')),
            ],
        ),
        migrations.CreateModel(
            name='PassionateSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passionateskill_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.TextField(blank=True)),
                ('channel_name', models.TextField(blank=True)),
                ('is_yt_mix', models.BooleanField(default=False)),
                ('playlist_id', models.CharField(max_length=150)),
                ('name', models.CharField(blank=True, max_length=150)),
                ('thumbnail_url', models.TextField(blank=True)),
                ('description', models.TextField(default='No description')),
                ('video_count', models.IntegerField(default=0)),
                ('published_at', models.DateTimeField(default=datetime.datetime.now)),
                ('is_private_on_yt', models.BooleanField(default=False)),
                ('playlist_yt_player_HTML', models.TextField(blank=True)),
                ('playlist_duration', models.CharField(blank=True, max_length=69)),
                ('playlist_duration_in_seconds', models.BigIntegerField(default=0)),
                ('started_on', models.DateTimeField(default=datetime.datetime.now, null=True)),
                ('last_watched', models.DateTimeField(default=datetime.datetime.now, null=True)),
                ('user_notes', models.TextField(default='')),
                ('user_label', models.CharField(default='', max_length=100)),
                ('marked_as', models.CharField(default='none', max_length=100)),
                ('is_favorite', models.BooleanField(blank=True, default=False)),
                ('num_of_accesses', models.IntegerField(default='0')),
                ('last_accessed_on', models.DateTimeField(default=datetime.datetime.now)),
                ('is_user_owned', models.BooleanField(default=True)),
                ('auto_check_for_updates', models.BooleanField(default=False)),
                ('is_in_db', models.BooleanField(default=False)),
                ('has_playlist_changed', models.BooleanField(default=False)),
                ('has_new_updates', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ShortQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('marks', models.IntegerField(default=0)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Exam')),
            ],
        ),
        migrations.CreateModel(
            name='ShortResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('datecreate', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=False)),
                ('timetaken', models.CharField(max_length=200)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Exam')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('duration_in_seconds', models.BigIntegerField(default=0)),
                ('thumbnail_url', models.TextField(blank=True)),
                ('published_at', models.DateTimeField(default=datetime.datetime.now)),
                ('description', models.TextField(default='')),
                ('has_cc', models.BooleanField(blank=True, default=False, null=True)),
                ('liked', models.BooleanField(default=False)),
                ('public_stats_viewable', models.BooleanField(default=True)),
                ('view_count', models.BigIntegerField(default=0)),
                ('like_count', models.BigIntegerField(default=0)),
                ('dislike_count', models.BigIntegerField(default=0)),
                ('comment_count', models.BigIntegerField(default=0)),
                ('yt_player_HTML', models.TextField(blank=True)),
                ('channel_id', models.TextField(blank=True)),
                ('channel_name', models.TextField(blank=True)),
                ('is_unavailable_on_yt', models.BooleanField(default=False)),
                ('was_deleted_on_yt', models.BooleanField(default=False)),
                ('is_planned_to_watch', models.BooleanField(default=False)),
                ('is_marked_as_watched', models.BooleanField(default=False)),
                ('is_favorite', models.BooleanField(blank=True, default=False)),
                ('num_of_accesses', models.IntegerField(default=0)),
                ('user_label', models.CharField(blank=True, max_length=100)),
                ('user_notes', models.TextField(blank=True)),
                ('video_details_modified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='YTExamQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(max_length=200)),
                ('option3', models.CharField(max_length=200)),
                ('option4', models.CharField(max_length=200)),
                ('answer', models.CharField(choices=[('1', 'Option1'), ('2', 'Option2'), ('3', 'Option3'), ('4', 'Option4')], max_length=200)),
                ('marks', models.IntegerField(default=1)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Video')),
            ],
        ),
        migrations.CreateModel(
            name='YTExamResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('wrong', models.PositiveIntegerField()),
                ('correct', models.PositiveIntegerField()),
                ('timetaken', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now=True)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ytexamquestion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.YTExamQuestion')),
            ],
        ),
        migrations.AlterField(
            model_name='subject',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.CreateModel(
            name='YTExamResultDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.CharField(max_length=200)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.YTExamQuestion')),
                ('ytexamresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.YTExamResult')),
            ],
        ),
        migrations.CreateModel(
            name='VideoWatched',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Video')),
            ],
        ),
        migrations.CreateModel(
            name='VideoToUnlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Video')),
            ],
        ),
        migrations.CreateModel(
            name='UserPics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picpath', models.TextField(default='')),
                ('pic', models.ImageField(upload_to='')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.DateTimeField(default=datetime.datetime.now)),
                ('logout', models.DateTimeField(default=datetime.datetime.now)),
                ('dur', models.CharField(default='', max_length=200)),
                ('session_id', models.CharField(default='', max_length=200)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=2048)),
                ('method', models.CharField(max_length=16)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TrainerNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainernotification_message', models.CharField(max_length=200)),
                ('status', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='senders', to=settings.AUTH_USER_MODEL)),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_name', models.CharField(max_length=200)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Chapter')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=69)),
                ('times_viewed', models.IntegerField(default=0)),
                ('times_viewed_per_week', models.IntegerField(default=0)),
                ('last_views_reset', models.DateTimeField(default=datetime.datetime.now)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlist_tags', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subhead_name', models.CharField(max_length=200)),
                ('mainhead', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.MainHead')),
            ],
        ),
        migrations.CreateModel(
            name='ShortResultDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('answer', models.CharField(max_length=200)),
                ('feedback', models.CharField(default='', max_length=200)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.ShortQuestion')),
                ('shortresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.ShortResult')),
            ],
        ),
        migrations.CreateModel(
            name='SessionMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mtype', models.CharField(choices=[('PDF', 'PDF'), ('HTML', 'HTML'), ('Video', 'Video'), ('URL', 'URL')], default='PDF', max_length=200)),
                ('urlvalue', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Video')),
            ],
        ),
        migrations.CreateModel(
            name='PlaylistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist_item_id', models.CharField(max_length=100)),
                ('video_position', models.IntegerField(blank=True)),
                ('published_at', models.DateTimeField(default=datetime.datetime.now)),
                ('channel_id', models.CharField(max_length=250, null=True)),
                ('channel_name', models.CharField(max_length=250, null=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_marked_as_watched', models.BooleanField(blank=True, default=False)),
                ('num_of_accesses', models.IntegerField(default=0)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlist_items', to='lxpapp.Playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Video')),
            ],
        ),
        migrations.AddField(
            model_name='playlist',
            name='tags',
            field=models.ManyToManyField(related_name='playlists', to='lxpapp.Tag'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='videos',
            field=models.ManyToManyField(related_name='playlists', to='lxpapp.Video'),
        ),
        migrations.CreateModel(
            name='Pin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(max_length=100)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Video')),
            ],
        ),
        migrations.CreateModel(
            name='ModuleChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Chapter')),
                ('module', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Module')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Subject')),
            ],
        ),
        migrations.AddField(
            model_name='module',
            name='subhead',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.SubHead'),
        ),
        migrations.CreateModel(
            name='McqResultDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.CharField(max_length=200)),
                ('mcqresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.McqResult')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.McqQuestion')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('serial_number', models.IntegerField(default=0)),
                ('topic', models.CharField(max_length=200)),
                ('mtype', models.CharField(choices=[('PDF', 'PDF'), ('HTML', 'HTML'), ('Video', 'Video'), ('URL', 'URL')], default='PDF', max_length=200)),
                ('urlvalue', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Chapter')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Subject')),
            ],
            options={
                'ordering': ['subject', 'chapter', 'serial_number'],
            },
        ),
        migrations.CreateModel(
            name='LearnerPlaylistCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=0)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Playlist')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerMaterialWatched',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Chapter')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Material')),
                ('module', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Module')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerDetailsPSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learnerdetails', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.LearnerDetails')),
                ('passionateskill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.PassionateSkill')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerDetailsKSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knownskill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.KnownSkill')),
                ('learnerdetails', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.LearnerDetails')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Module')),
            ],
        ),
        migrations.CreateModel(
            name='LastUserLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IsFirstLogIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=2048)),
                ('exception', models.TextField()),
                ('traceback', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CourseSetDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Chapter')),
                ('courseset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.CourseSet')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Module')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Subject')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Topic')),
            ],
        ),
        migrations.AddField(
            model_name='courseset',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Module'),
        ),
        migrations.AddField(
            model_name='courseset',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Subject'),
        ),
        migrations.AddField(
            model_name='courseset',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Topic'),
        ),
        migrations.CreateModel(
            name='CourseDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Chapter')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Course')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Module')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Subject')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Topic')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Module'),
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Subject'),
        ),
        migrations.AddField(
            model_name='course',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Topic'),
        ),
        migrations.CreateModel(
            name='ChapterResultDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.CharField(max_length=200)),
                ('chapterresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.ChapterResult')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.ChapterQuestion')),
            ],
        ),
        migrations.AddField(
            model_name='chapterresult',
            name='module',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Module'),
        ),
        migrations.AddField(
            model_name='chapterresult',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Subject'),
        ),
        migrations.AddField(
            model_name='chapterquestion',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Subject'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Subject'),
        ),
        migrations.CreateModel(
            name='BatchTrainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Batch')),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BatchRecordedVDOList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Batch')),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Playlist')),
            ],
        ),
        migrations.CreateModel(
            name='BatchModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Batch')),
                ('module', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Module')),
            ],
        ),
        migrations.CreateModel(
            name='Batchlearner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee', models.IntegerField(default=0)),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.Batch')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='batch',
            name='coursetype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.CourseType'),
        ),
    ]
